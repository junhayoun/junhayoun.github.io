[
    {
    "pfId":"bcs",
    "pfName":"병 찾 사",
    "pfDesc":"안드로이드를 이용한 병원진료 예약 APP",
    "pfDate":"2019.09  -  2019.11",
    "pfPeople":"5명(기능 및 액티비티에 따라 역할 분배",
    "pfFeat":"장시간 진료 대기시간을 해소시키고자 간편하게 핸드폰의 앱으로 해당 병원을 검색하고 예약을 하여  기동성 있는 병원 진료를 도와주는 서비스",
    "pfSlide":[
        { "src": "/assets/img/bcs1.png", "title": "Firebase의 db를 통한 로그인" },
        { "src": "/assets/img/bcs2.png", "title": "스위칭을 통한 메뉴 분류" },
        { "src": "/assets/img/bcs3.png", "title": "Firechat API를 이용한 채팅 구현" },
        { "src": "/assets/img/bcs4.png", "title": "TIMEPICKER를 이용한 진료예약" },
        { "src": "/assets/img/bcs5.png", "title": "DB-> LISTVIEW 예약진행여부" },
        { "src": "/assets/img/bcs6.png", "title": "APP INITIAL 레이아웃 디자인" }
    ],
    "pfAcPic":[
        { "src": "/assets/img/bcsAc1.png", "title": "병찾사 구성도" },
        { "src": "/assets/img/bcsAc2.png", "title": "병찾사 기능 사항" }
    ],
    "pfSkill":"안드로이드, JAVA, FIREBASE",
    "pfRole":["FirebaseAPI를 이용하여 DB연동", "FireChat(실시간DB)를 이용한 채팅 구현","관리자 페이지 구현","전체적인 Activity의 조율 및 연결"],
    "pfProd":["기능별 클래스 나누기", "XML로 액티비티 별 디자인 설정","API를 통한 DB연동","기능 테스트 후 액티비티 연결"],
    "pfHard":["안드로이드를 처음 접하다 보니 기존에 다루던 라이브러리, 메소드들과 달라 어려움을 겪음.", "TimeStamp 계산을 아무도 할 줄 몰라서 채팅 구현에서 어려움을 겪음."],
    "pfBenef":["웹이 아닌 앱기반인 안드로이드라는 새로운 스킬을 터득하게 됨.", "처음 접한 언어에 대한 두려움을 극복할 수 있는 자신감이 생겼다."]
    },
    {
    "pfId":"itm",
    "pfName":"I T E A M",
    "pfDesc":"Tomcat과 Spring을 이용한 IT프로젝트 커뮤니티",
    "pfDate":"2021.05  -  2021.07",
    "pfPeople":"5명(기능 및 페이지에 따라 역할 분배)",
    "pfFeat":"정보 혹은 주변 인맥이 다소 부족한 주니어 개발자들을 위해 정보를 제공하고, 팀 매칭 시스템을 통해 프로젝트 구인을 도와주는 커뮤니티",
    "pfSlide":[
        { "src": "/assets/img/itm1.png", "title": "ITEAM 초기화면" },
        { "src": "/assets/img/itm2.png", "title": "AJAX와 자바스크립트를 이용한 회원가입 구현" },
        { "src": "/assets/img/itm3.png", "title": "페이징처리, C:IF 등을 이용한 프로젝트 목록" },
        { "src": "/assets/img/itm4.png", "title": "세션 및 카운팅을 통해 프로젝트 마감여부 확인" },
        { "src": "/assets/img/itm5.png", "title": "신청한 프로젝트 진행여부 확인 및 그만두기 기능" },
        { "src": "/assets/img/itm6.png", "title": "관리자 모드를 통해 회원등급 수정, 신고회원 처리 가능" }
    ],
    "pfAcPic":[
        { "src": "/assets/img/itmAc1.png", "title": "ITEAM 구성도" },
        { "src": "/assets/img/itmAc2.png", "title": "ITEAM 기능 및 요구사항" }
    ],
    "pfSkill":"안드로이드, JAVA, FIREBASE",
    "pfRole":["관리자 페이지 구현(신고처리, 회원등급 처리)", "팀원 구하기 페이지 구현","팀 프로젝팅 페이지 구현(구성원들 정보 확인 및 소통 진행)","추가 오라클 쿼리문 작성 후 DAO 추가 작업."],
    "pfProd":["VO, DAO 오라클  테이블 정립", "해당하는 SERVICE와 컨트롤러 생성","컨트롤러 테스팅 후 이상 없을 시 JSP 제작","자바스크립트 HTML을 사용하여 구체적인 기능 생성"],
    "pfHard":["TOMCAT의 설정 값을 잘못 지정하여, 프로젝트 시작하기 앞선 시간들이 너무 지체됬다.", "AJAX라는 비동기 통신방법을 접해 본적이 없어 프로젝트에 접목시키는 것에 어려움이 있었다."],
    "pfBenef":["MVC구조를 완벽하게 터득하였고, Service, Controller의 역할을 이해할 수 있었다.", "TOMCAT이나 AJAX같은 생소한 기술들을 터득할 수 있었던 좋은 경험을 했다."]
    },
    {
    "pfId":"gis",
    "pfName":"통합 관제 플랫폼",
    "pfDesc":"GIS 기반 통합 관제 플랫폼",
    "pfDate":"2021.07  -  2022.04",
    "pfPeople":"3 ~ 5명  ",
    "pfFeat":"인천 남동공단을 관제하는 GIS기반 플랫폼이며, 관제센터에서 플랫폼을 통해 화재전역감시 , 교통소통 및 돌발 정보 수집, 공단 내 시설물 관리 등을 수행한다.",
    "pfSlide":[
        { "src": "/assets/img/gis1.png", "title": "GIS기반 메인화면" },
        { "src": "/assets/img/gis2.png", "title": "화재발생시 이벤트 팝업" },
        { "src": "/assets/img/gis3.png", "title": "UTIC교통카메라를 통한 실시간 교통량 확인" },
        { "src": "/assets/img/gis4.png", "title": "노드링크를 이용하여 도로별 교통량 확인" },
        { "src": "/assets/img/gis5.png", "title": "Openlayers 를 이용하여 화재위험 지역 표출" },
        { "src": "/assets/img/gis6.png", "title": "남동공단내 시설물들을 심볼로 관리하여 지도위에 표출" }
    ],
    "pfAcPic":[
        { "src": "/assets/img/gisAc1.png", "title": "통합 관제 플랫폼 구성도" },
        { "src": "/assets/img/gisAc2.png", "title": "기능 및 요구사항" }
    ],
    "pfSkill":"Java/GRADLE, JPA, vue.js, MariaDB, Openlayers",
    "pfRole":["GIS기반으로 한 함수 구현(Openlayers)", "화재감시카메라 연계(웹소켓 사용)","교통소통정보 연계(표준노드링크)","기타 REST API 설계"],
    "pfProd":["DB 설계 및 연계 JPA 구성", "자바단 Controller, Service 설계","Vue.js로 표출 / 기능에 따른 함수 생성","기타 외부모듈 연계"],
    "pfHard":["vue.js특성인 부모자식 구조로 헷갈림을 겪기도 했으나, 기능별로 깔끔하게 정리할수 있다.", "단순한 CRUD를 구현할 떄는 JPA가 편리하지만, JOIN을 사용할 경우 다소 까다로운 부분이 있었다."],
    "pfBenef":["지도라는 것이 단순한 이미지가 아닌 레벨 별로 PNG가 존재하는 구조를 파악하게 됨", "외부 모듈과 연계를 진행하면서 네트워크에 대한 지식도 풍부해졌다."]
    },
    {
    "pfId":"iot",
    "pfName":"사업장 대시보드",
    "pfDesc":"IOT 기반사업장 센서 대시보드",
    "pfDate":"2021.10  -  2022.04",
    "pfPeople":"3 ~ 4명  ",
    "pfFeat":"인천 남동공단 내 사업장 센서를 한눈에 보기 쉽게 대시보드화 한 플랫폼이며, 센서 종류로는 6종센서, 공기청정기, 전기감지, 열화상카메라, 가스누액 감지 등이 있다.",
    "pfSlide":[
        { "src": "/assets/img/iot1.png", "title": "대시보드 초기화면" },
        { "src": "/assets/img/iot2.png", "title": "사업장 별 사업장 센서 정보" },
        { "src": "/assets/img/iot3.png", "title": "상황 알림 이력(센서 위험 수치 이상시)" },
        { "src": "/assets/img/iot4.png", "title": "사업장 대기 모니터링 ( 6종센서, 공기청정기 정보)" },
        { "src": "/assets/img/iot5.png", "title": "사업장 유해가스 유출 방지" },
        { "src": "/assets/img/iot6.png", "title": "사업장 화재 방지( 전기감지센서, 열화상 카메라)" }
    ],
    "pfAcPic":[
        { "src": "/assets/img/iotAc1.png", "title": "사업장 대시보드 구성도" },
        { "src": "/assets/img/iotAc2.png", "title": "대시보드 기능 및 요구사항" }
    ],
    "pfSkill":"MQTT, node.js, Java/GRADLE, JPA, vue.js, MariaDB",
    "pfRole":["차트 및 스와이프로 프론트 구현", "MQTT로 모비우스와 DB간 인터페이스 ","센서 제어 메소드 구현","REST API 설계 및 생성"],
    "pfProd":["DB 설계 및 연계 JPA 구성", "자바단 Controller, Service 설계","모비우스를 통해 센서 데이터 수집 및 WAS연동","Vue.js로 표출 / 기능에 따른 함수 생성 "],
    "pfHard":["모비우스에서 센서 데이터를 수집하는 데 있어서 MQTT통신을 이용함에 있어 생소했다.", "Chart.js와 Swiper.js 상세한 옵션에 대한 지식이 없어 다소 어려움이 있었다."],
    "pfBenef":["MQTT통신의 QOS를 파악하면서 IOT기술을 이해할 수 있는 계기가 되었다.", "프론트 단의 API들의 다양한 옵션들을 공부할 수 있는 계기가 되었다."]
    },
    {
    "pfId":"sol",
    "pfName":"신한은행",
    "pfDesc":"마이데이터 서비스 기반 SOL 머니버스",
    "pfDate":"2022.04  -  2023.04",
    "pfPeople":"8~12명  ",
    "pfFeat":"신한은행의 마이데이터 기반 자산관리 서비스로, 고객의 예상 금융일정, 예상 잔액 뿐만 아니라 공모주, 아파트 청약, 나이키 드로우 일정을 보여주는 캘린더, 또한 페이, 멤버심 등의 다양한 포인트 현황을 한눈에 제공하는 서비스",
    "pfSlide":[
        { "src": "/assets/img/sol1.png", "title": "신한은행 머니버스 메인" },
        { "src": "/assets/img/sol2.png", "title": "내차리포트 추가 화면" },
        { "src": "/assets/img/sol3.png", "title": "연금 추가 화면(런인베스트)" },
        { "src": "/assets/img/sol4.png", "title": "금융일정 캘린더 화면" },
        { "src": "/assets/img/sol5.png", "title": "골드 실버 자산 추가 화면" },
        { "src": "/assets/img/sol6.png", "title": "연말정산 시뮬레이션 화면" }
    ],
    "pfAcPic":[
        { "src": "/assets/img/iotAc1.png", "title": "사업장 대시보드 구성도" },
        { "src": "/assets/img/iotAc2.png", "title": "대시보드 기능 및 요구사항" }
    ],
    "pfSkill":": BXM(JAVA) QureyOne(Tibero), JavaScript",
    "pfRole":["머니버스 캘린더 서비스 구현", "외부 API 연동 (내차리포트, 헬스 케어, 주식","머니버스 권유직원실적을 위한 로직 생성","머니버스 선물탭, 쿠폰이벤트 구현"],
    "pfProd":["지라 티켓을 통해 작업 착수", "BXM5툴을 이용하여 테이블 뷰들을 쿼리로 통해 output 생성","생성된 output dto를 통하여 서비스 및 전문 생성","생성된 전문 클라이언트 단에서 ajax호출"],
    "pfHard":["금융권 프로젝트는 처음이어서 전문이나 솔루션들을 이해하는데 시간이 걸렷다.", "대고객 서비스이다 보니 방대한 양의 데이터를 처리하는 쿼리를 컨트롤 하는게 쉽지 않았다."],
    "pfBenef":["대규모의 외부 인터페이스 연동을 하면서 네트워크와 방화벽에 대한 이해도가 높아졌다.", "기존에는 다뤄보지 못한 몇천줄 짜리 쿼리를 짜면서 쿼리 실력이 많이 높아졌다."]
    }
]